language: python
python:
- '2.7'
- '3.5'
sudo: required
dist: trusty
install:
- if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then wget https://repo.continuum.io/archive/Anaconda2-4.2.0-Linux-x86_64.sh
  -O anaconda.sh; else wget https://repo.continuum.io/archive/Anaconda3-4.2.0-Linux-x86_64.sh
  -O anaconda.sh; fi
- bash anaconda.sh -b -p $HOME/anaconda
- export PATH="$HOME/anaconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
- conda config --add channels http://conda.binstar.org/omnia
- conda install pandas
- conda install -c omnia rdkit
- conda install -c omnia boost=1.59.0
- conda install -c omnia openbabel
- conda install joblib
- conda install h5py
- pip install keras
- export KERAS_BACKEND=tensorflow
- conda install seaborn
- conda install six
- conda install dill
- conda install runipy
- conda install ipyparallel
- pip install runipy
- pip install nglview
- conda install -c omnia mdtraj
- python setup.py install
- conda install -c https://conda.anaconda.org/jjhelmus tensorflow
script:
- nosetests -v deepchem --nologcapture
after_success:
- source devtools/travis-ci/after_sucess.sh
env:
  global:
  - secure: XggCYkm2KEgNr3KARyfvIh9AeC27xgqpSMRMB2T+EqPXdi9iXiRKLsYndQ0jYRPLobHbnZfk6Ggh3j4GpM7n+1HmSJchiUSarOZGk+XHlGvJg5fVWoDhiSziKMDuHFNQhO6U7biZQPdqywCsnBdOBbNFS4j4hr6qH3JD79/IiEynn8zDS9xhgc/DaL4uesMVKNSBHlPp3NqZaY8MgmftxTrRDKznvcmdJF14sKahACsWfLjxFb4M6Y50NGV138V69kgL1oAx2PXWMLpedaPuTKBgtbIks0wxikMQtCJO2BJi/F8aKVsSGrNKzXv+R7VJzc9CsOSskFNK0UFmOGDsc2DNFLjpVtZBZpV3jKuuUuUrG8GHsSI+S7DYFym+eeIdYjQ71Ji/T5SHXNWcB6WXcFHW9A4yH3APEhQT6Y6h48Um5iDB5RvfMSy+cUUml70Gt6oNkuNcCn/y2TehvjBDhTFmcVMKXR3seL24XLDzWLdIRf4fFK2ovnwOHCvHYiago70R5FaadBD7W7a335SU316KITtRH2OEwgBsG1ot2bHUsJ9eHdKLvUlhQNrAJajTL4U/pk73i9f6Ykzhqq5j60JfrCGL1mfOzfh6KdlsHRHPub3qUFnseqdqiv93ZM+P5TVY40fjTlaiau8s3gDpOjy4DkSE3wNY1GCrsVwwHOk=
  - secure: LDOr4CRfymtP4ovsbY1kjzbVsBJMiwW2fBNLJDAaY4sVmfj6ZXN0CsEZFjHdndBWRpK1dygiysnxm1J9mnrXihH/BzNyUsGWYi53LIvWMgYmbWcPnjnBYe00FMWn3arNvl04j4g9dlDzS9eFFEXf6LucfNLqFX44mc+F5yMr682dSH+UH/mLGkwlVASSCzGLl7bvk2/VzhaqVZwb1dzpiJ9BC0Wj06YU9zL0cHIW9YmmY9oBFELdcX4ZdIjWduhSEgFaxSRzDZ16hxCAfXgpiwlcEgQe0DYRIvYFvDCHiCi2Ye4kc/IWLEWWxTBoGUQFP5FeceTUzSqlKAzFHA0UxkPwr6PU41X9KFGacWY6g6dw7EkVBqZc+3P0iQXYZ1PA7WdaVwS0V1xeEYp9csmAXQ9ZhryO1p94ZBDU9Ifw7o4CpeBbQ72dhIVSsKDe4gufgixD1F1C5rdqDZy3heuqKkeahp5FRRtYMRfQZPoY0qzsoNQX1v+e6jByqNV/UukJ/ehugOJ5dU42RSw76YfocqHkNL3/AGIRr3gDcY+w+tOuINl0Ft0p5fQeLHjCcxAIl8lR+YIO54wnz+JgwVcjlr0d1zYUO5jJclwS+TSFdhb24EvoemAWkfV7WD90JRm1R5GVxd3rLagUuwCoI5uPMF4A2YCIakM6/FPTmBF3f7Q=
